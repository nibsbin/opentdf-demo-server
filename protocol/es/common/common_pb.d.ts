// @generated by protoc-gen-es v2.2.1
// @generated from file common/common.proto (package common, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file common/common.proto.
 */
export declare const file_common_common: GenFile;

/**
 * Struct to uniquely identify a resource with optional additional metadata
 *
 * @generated from message common.Metadata
 */
export declare type Metadata = Message<"common.Metadata"> & {
  /**
   * created_at set by server (entity who created will recorded in an audit event)
   *
   * @generated from field: google.protobuf.Timestamp created_at = 1;
   */
  createdAt?: Timestamp;

  /**
   * updated_at set by server (entity who updated will recorded in an audit event)
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  /**
   * optional short description
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message common.Metadata.
 * Use `create(MetadataSchema)` to create a new message.
 */
export declare const MetadataSchema: GenMessage<Metadata>;

/**
 * @generated from message common.MetadataMutable
 */
export declare type MetadataMutable = Message<"common.MetadataMutable"> & {
  /**
   * optional labels
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message common.MetadataMutable.
 * Use `create(MetadataMutableSchema)` to create a new message.
 */
export declare const MetadataMutableSchema: GenMessage<MetadataMutable>;

/**
 * @generated from enum common.MetadataUpdateEnum
 */
export enum MetadataUpdateEnum {
  /**
   * unspecified update type
   *
   * @generated from enum value: METADATA_UPDATE_ENUM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * only update the fields that are provided
   *
   * @generated from enum value: METADATA_UPDATE_ENUM_EXTEND = 1;
   */
  EXTEND = 1,

  /**
   * replace the entire metadata with the provided metadata
   *
   * @generated from enum value: METADATA_UPDATE_ENUM_REPLACE = 2;
   */
  REPLACE = 2,
}

/**
 * Describes the enum common.MetadataUpdateEnum.
 */
export declare const MetadataUpdateEnumSchema: GenEnum<MetadataUpdateEnum>;

/**
 * buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package
 *
 * @generated from enum common.ActiveStateEnum
 */
export enum ActiveStateEnum {
  /**
   * @generated from enum value: ACTIVE_STATE_ENUM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTIVE_STATE_ENUM_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: ACTIVE_STATE_ENUM_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ACTIVE_STATE_ENUM_ANY = 3;
   */
  ANY = 3,
}

/**
 * Describes the enum common.ActiveStateEnum.
 */
export declare const ActiveStateEnumSchema: GenEnum<ActiveStateEnum>;

