// @generated by protoc-gen-es v2.2.1
// @generated from file policy/objects.proto (package policy, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../buf/validate/validate_pb";
import { file_common_common } from "../common/common_pb";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file policy/objects.proto.
 */
export const file_policy_objects = /*@__PURE__*/
  fileDesc("ChRwb2xpY3kvb2JqZWN0cy5wcm90bxIGcG9saWN5IqsBCglOYW1lc3BhY2USCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRILCgNmcW4YAyABKAkSKgoGYWN0aXZlGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIiCghtZXRhZGF0YRgFIAEoCzIQLmNvbW1vbi5NZXRhZGF0YRInCgZncmFudHMYBiADKAsyFy5wb2xpY3kuS2V5QWNjZXNzU2VydmVyIqoCCglBdHRyaWJ1dGUSCgoCaWQYASABKAkSJAoJbmFtZXNwYWNlGAIgASgLMhEucG9saWN5Lk5hbWVzcGFjZRIMCgRuYW1lGAMgASgJEjgKBHJ1bGUYBCABKA4yHS5wb2xpY3kuQXR0cmlidXRlUnVsZVR5cGVFbnVtQgu6SAjIAQGCAQIQARIdCgZ2YWx1ZXMYBSADKAsyDS5wb2xpY3kuVmFsdWUSJwoGZ3JhbnRzGAYgAygLMhcucG9saWN5LktleUFjY2Vzc1NlcnZlchILCgNmcW4YByABKAkSKgoGYWN0aXZlGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIiCghtZXRhZGF0YRhkIAEoCzIQLmNvbW1vbi5NZXRhZGF0YSKPAgoFVmFsdWUSCgoCaWQYASABKAkSJAoJYXR0cmlidXRlGAIgASgLMhEucG9saWN5LkF0dHJpYnV0ZRINCgV2YWx1ZRgDIAEoCRInCgZncmFudHMYBSADKAsyFy5wb2xpY3kuS2V5QWNjZXNzU2VydmVyEgsKA2ZxbhgGIAEoCRIqCgZhY3RpdmUYByABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjAKEHN1YmplY3RfbWFwcGluZ3MYCCADKAsyFi5wb2xpY3kuU3ViamVjdE1hcHBpbmcSIgoIbWV0YWRhdGEYZCABKAsyEC5jb21tb24uTWV0YWRhdGFKBAgEEAVSB21lbWJlcnMixAEKBkFjdGlvbhIxCghzdGFuZGFyZBgBIAEoDjIdLnBvbGljeS5BY3Rpb24uU3RhbmRhcmRBY3Rpb25IABIQCgZjdXN0b20YAiABKAlIACJsCg5TdGFuZGFyZEFjdGlvbhIfChtTVEFOREFSRF9BQ1RJT05fVU5TUEVDSUZJRUQQABIbChdTVEFOREFSRF9BQ1RJT05fREVDUllQVBABEhwKGFNUQU5EQVJEX0FDVElPTl9UUkFOU01JVBACQgcKBXZhbHVlIsUBCg5TdWJqZWN0TWFwcGluZxIKCgJpZBgBIAEoCRImCg9hdHRyaWJ1dGVfdmFsdWUYAiABKAsyDS5wb2xpY3kuVmFsdWUSOgoVc3ViamVjdF9jb25kaXRpb25fc2V0GAMgASgLMhsucG9saWN5LlN1YmplY3RDb25kaXRpb25TZXQSHwoHYWN0aW9ucxgEIAMoCzIOLnBvbGljeS5BY3Rpb24SIgoIbWV0YWRhdGEYZCABKAsyEC5jb21tb24uTWV0YWRhdGEimAEKCUNvbmRpdGlvbhInCh9zdWJqZWN0X2V4dGVybmFsX3NlbGVjdG9yX3ZhbHVlGAEgASgJEkEKCG9wZXJhdG9yGAIgASgOMiIucG9saWN5LlN1YmplY3RNYXBwaW5nT3BlcmF0b3JFbnVtQgu6SAjIAQGCAQIQARIfChdzdWJqZWN0X2V4dGVybmFsX3ZhbHVlcxgDIAMoCSKKAQoOQ29uZGl0aW9uR3JvdXASLwoKY29uZGl0aW9ucxgBIAMoCzIRLnBvbGljeS5Db25kaXRpb25CCLpIBZIBAggBEkcKEGJvb2xlYW5fb3BlcmF0b3IYAiABKA4yIC5wb2xpY3kuQ29uZGl0aW9uQm9vbGVhblR5cGVFbnVtQgu6SAjIAQGCAQIQASJICgpTdWJqZWN0U2V0EjoKEGNvbmRpdGlvbl9ncm91cHMYASADKAsyFi5wb2xpY3kuQ29uZGl0aW9uR3JvdXBCCLpIBZIBAggBInkKE1N1YmplY3RDb25kaXRpb25TZXQSCgoCaWQYASABKAkSMgoMc3ViamVjdF9zZXRzGAMgAygLMhIucG9saWN5LlN1YmplY3RTZXRCCLpIBZIBAggBEiIKCG1ldGFkYXRhGGQgASgLMhAuY29tbW9uLk1ldGFkYXRhIlYKD1N1YmplY3RQcm9wZXJ0eRIrChdleHRlcm5hbF9zZWxlY3Rvcl92YWx1ZRgBIAEoCUIKukgHyAEBcgIQARIWCg5leHRlcm5hbF92YWx1ZRgCIAEoCSJ6ChRSZXNvdXJjZU1hcHBpbmdHcm91cBIKCgJpZBgBIAEoCRIcCgxuYW1lc3BhY2VfaWQYAiABKAlCBrpIA8gBARIUCgRuYW1lGAMgASgJQga6SAPIAQESIgoIbWV0YWRhdGEYZCABKAsyEC5jb21tb24uTWV0YWRhdGEirQEKD1Jlc291cmNlTWFwcGluZxIKCgJpZBgBIAEoCRIiCghtZXRhZGF0YRgCIAEoCzIQLmNvbW1vbi5NZXRhZGF0YRIuCg9hdHRyaWJ1dGVfdmFsdWUYAyABKAsyDS5wb2xpY3kuVmFsdWVCBrpIA8gBARINCgV0ZXJtcxgEIAMoCRIrCgVncm91cBgFIAEoCzIcLnBvbGljeS5SZXNvdXJjZU1hcHBpbmdHcm91cCL7AwoPS2V5QWNjZXNzU2VydmVyEgoKAmlkGAEgASgJEoIDCgN1cmkYAiABKAlC9AK6SPACugHsAgoKdXJpX2Zvcm1hdBLPAVVSSSBtdXN0IGJlIGEgdmFsaWQgVVJMIChlLmcuLCAnaHR0cHM6Ly9kZW1vLmNvbS8nKSBmb2xsb3dlZCBieSBhZGRpdGlvbmFsIHNlZ21lbnRzLiBFYWNoIHNlZ21lbnQgbXVzdCBzdGFydCBhbmQgZW5kIHdpdGggYW4gYWxwaGFudW1lcmljIGNoYXJhY3RlciwgY2FuIGNvbnRhaW4gaHlwaGVucywgYWxwaGFudW1lcmljIGNoYXJhY3RlcnMsIGFuZCBzbGFzaGVzLhqLAXRoaXMubWF0Y2hlcygnXmh0dHBzPzovL1thLXpBLVowLTldKFthLXpBLVowLTlcXC1dezAsNjF9W2EtekEtWjAtOV0pPyhcXC5bYS16QS1aMC05XShbYS16QS1aMC05XFwtXXswLDYxfVthLXpBLVowLTldKT8pKig6WzAtOV0rKT8oLy4qKT8kJykSJQoKcHVibGljX2tleRgDIAEoCzIRLnBvbGljeS5QdWJsaWNLZXkSDAoEbmFtZRgUIAEoCRIiCghtZXRhZGF0YRhkIAEoCzIQLmNvbW1vbi5NZXRhZGF0YSJSCgxLYXNQdWJsaWNLZXkSCwoDcGVtGAEgASgJEgsKA2tpZBgCIAEoCRIoCgNhbGcYAyABKA4yGy5wb2xpY3kuS2FzUHVibGljS2V5QWxnRW51bSI1Cg9LYXNQdWJsaWNLZXlTZXQSIgoEa2V5cxgBIAMoCzIULnBvbGljeS5LYXNQdWJsaWNLZXki0AMKCVB1YmxpY0tleRL8AgoGcmVtb3RlGAEgASgJQukCukjlAroB4QIKCnVyaV9mb3JtYXQSzwFVUkkgbXVzdCBiZSBhIHZhbGlkIFVSTCAoZS5nLiwgJ2h0dHBzOi8vZGVtby5jb20vJykgZm9sbG93ZWQgYnkgYWRkaXRpb25hbCBzZWdtZW50cy4gRWFjaCBzZWdtZW50IG11c3Qgc3RhcnQgYW5kIGVuZCB3aXRoIGFuIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXIsIGNhbiBjb250YWluIGh5cGhlbnMsIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzLCBhbmQgc2xhc2hlcy4agAF0aGlzLm1hdGNoZXMoJ15odHRwczovL1thLXpBLVowLTldKFthLXpBLVowLTlcXC1dezAsNjF9W2EtekEtWjAtOV0pPyhcXC5bYS16QS1aMC05XShbYS16QS1aMC05XFwtXXswLDYxfVthLXpBLVowLTldKT8pKigvLiopPyQnKUgAEikKBmNhY2hlZBgDIAEoCzIXLnBvbGljeS5LYXNQdWJsaWNLZXlTZXRIAEIMCgpwdWJsaWNfa2V5SgQIAhADUgVsb2NhbCqzAQoVQXR0cmlidXRlUnVsZVR5cGVFbnVtEigKJEFUVFJJQlVURV9SVUxFX1RZUEVfRU5VTV9VTlNQRUNJRklFRBAAEiMKH0FUVFJJQlVURV9SVUxFX1RZUEVfRU5VTV9BTExfT0YQARIjCh9BVFRSSUJVVEVfUlVMRV9UWVBFX0VOVU1fQU5ZX09GEAISJgoiQVRUUklCVVRFX1JVTEVfVFlQRV9FTlVNX0hJRVJBUkNIWRADKsoBChpTdWJqZWN0TWFwcGluZ09wZXJhdG9yRW51bRItCilTVUJKRUNUX01BUFBJTkdfT1BFUkFUT1JfRU5VTV9VTlNQRUNJRklFRBAAEiQKIFNVQkpFQ1RfTUFQUElOR19PUEVSQVRPUl9FTlVNX0lOEAESKAokU1VCSkVDVF9NQVBQSU5HX09QRVJBVE9SX0VOVU1fTk9UX0lOEAISLQopU1VCSkVDVF9NQVBQSU5HX09QRVJBVE9SX0VOVU1fSU5fQ09OVEFJTlMQAyqQAQoYQ29uZGl0aW9uQm9vbGVhblR5cGVFbnVtEisKJ0NPTkRJVElPTl9CT09MRUFOX1RZUEVfRU5VTV9VTlNQRUNJRklFRBAAEiMKH0NPTkRJVElPTl9CT09MRUFOX1RZUEVfRU5VTV9BTkQQARIiCh5DT05ESVRJT05fQk9PTEVBTl9UWVBFX0VOVU1fT1IQAiqaAQoTS2FzUHVibGljS2V5QWxnRW51bRInCiNLQVNfUFVCTElDX0tFWV9BTEdfRU5VTV9VTlNQRUNJRklFRBAAEiQKIEtBU19QVUJMSUNfS0VZX0FMR19FTlVNX1JTQV8yMDQ4EAESKAokS0FTX1BVQkxJQ19LRVlfQUxHX0VOVU1fRUNfU0VDUDI1NlIxEAUiBAgCEAQiBAgGEGRCggEKCmNvbS5wb2xpY3lCDE9iamVjdHNQcm90b1ABWi5naXRodWIuY29tL29wZW50ZGYvcGxhdGZvcm0vcHJvdG9jb2wvZ28vcG9saWN5ogIDUFhYqgIGUG9saWN5ygIGUG9saWN54gISUG9saWN5XEdQQk1ldGFkYXRh6gIGUG9saWN5YgZwcm90bzM", [file_buf_validate_validate, file_common_common, file_google_protobuf_wrappers]);

/**
 * Describes the message policy.Namespace.
 * Use `create(NamespaceSchema)` to create a new message.
 */
export const NamespaceSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 0);

/**
 * Describes the message policy.Attribute.
 * Use `create(AttributeSchema)` to create a new message.
 */
export const AttributeSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 1);

/**
 * Describes the message policy.Value.
 * Use `create(ValueSchema)` to create a new message.
 */
export const ValueSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 2);

/**
 * Describes the message policy.Action.
 * Use `create(ActionSchema)` to create a new message.
 */
export const ActionSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 3);

/**
 * Describes the enum policy.Action.StandardAction.
 */
export const Action_StandardActionSchema = /*@__PURE__*/
  enumDesc(file_policy_objects, 3, 0);

/**
 * Standard actions supported by the platform
 *
 * @generated from enum policy.Action.StandardAction
 */
export const Action_StandardAction = /*@__PURE__*/
  tsEnum(Action_StandardActionSchema);

/**
 * Describes the message policy.SubjectMapping.
 * Use `create(SubjectMappingSchema)` to create a new message.
 */
export const SubjectMappingSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 4);

/**
 * Describes the message policy.Condition.
 * Use `create(ConditionSchema)` to create a new message.
 */
export const ConditionSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 5);

/**
 * Describes the message policy.ConditionGroup.
 * Use `create(ConditionGroupSchema)` to create a new message.
 */
export const ConditionGroupSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 6);

/**
 * Describes the message policy.SubjectSet.
 * Use `create(SubjectSetSchema)` to create a new message.
 */
export const SubjectSetSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 7);

/**
 * Describes the message policy.SubjectConditionSet.
 * Use `create(SubjectConditionSetSchema)` to create a new message.
 */
export const SubjectConditionSetSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 8);

/**
 * Describes the message policy.SubjectProperty.
 * Use `create(SubjectPropertySchema)` to create a new message.
 */
export const SubjectPropertySchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 9);

/**
 * Describes the message policy.ResourceMappingGroup.
 * Use `create(ResourceMappingGroupSchema)` to create a new message.
 */
export const ResourceMappingGroupSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 10);

/**
 * Describes the message policy.ResourceMapping.
 * Use `create(ResourceMappingSchema)` to create a new message.
 */
export const ResourceMappingSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 11);

/**
 * Describes the message policy.KeyAccessServer.
 * Use `create(KeyAccessServerSchema)` to create a new message.
 */
export const KeyAccessServerSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 12);

/**
 * Describes the message policy.KasPublicKey.
 * Use `create(KasPublicKeySchema)` to create a new message.
 */
export const KasPublicKeySchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 13);

/**
 * Describes the message policy.KasPublicKeySet.
 * Use `create(KasPublicKeySetSchema)` to create a new message.
 */
export const KasPublicKeySetSchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 14);

/**
 * Describes the message policy.PublicKey.
 * Use `create(PublicKeySchema)` to create a new message.
 */
export const PublicKeySchema = /*@__PURE__*/
  messageDesc(file_policy_objects, 15);

/**
 * Describes the enum policy.AttributeRuleTypeEnum.
 */
export const AttributeRuleTypeEnumSchema = /*@__PURE__*/
  enumDesc(file_policy_objects, 0);

/**
 * buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package
 *
 * @generated from enum policy.AttributeRuleTypeEnum
 */
export const AttributeRuleTypeEnum = /*@__PURE__*/
  tsEnum(AttributeRuleTypeEnumSchema);

/**
 * Describes the enum policy.SubjectMappingOperatorEnum.
 */
export const SubjectMappingOperatorEnumSchema = /*@__PURE__*/
  enumDesc(file_policy_objects, 1);

/**
 * buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package
 *
 * @generated from enum policy.SubjectMappingOperatorEnum
 */
export const SubjectMappingOperatorEnum = /*@__PURE__*/
  tsEnum(SubjectMappingOperatorEnumSchema);

/**
 * Describes the enum policy.ConditionBooleanTypeEnum.
 */
export const ConditionBooleanTypeEnumSchema = /*@__PURE__*/
  enumDesc(file_policy_objects, 2);

/**
 * buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package
 *
 * @generated from enum policy.ConditionBooleanTypeEnum
 */
export const ConditionBooleanTypeEnum = /*@__PURE__*/
  tsEnum(ConditionBooleanTypeEnumSchema);

/**
 * Describes the enum policy.KasPublicKeyAlgEnum.
 */
export const KasPublicKeyAlgEnumSchema = /*@__PURE__*/
  enumDesc(file_policy_objects, 3);

/**
 * @generated from enum policy.KasPublicKeyAlgEnum
 */
export const KasPublicKeyAlgEnum = /*@__PURE__*/
  tsEnum(KasPublicKeyAlgEnumSchema);

