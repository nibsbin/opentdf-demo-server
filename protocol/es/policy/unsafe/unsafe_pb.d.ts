// @generated by protoc-gen-es v2.2.1
// @generated from file policy/unsafe/unsafe.proto (package policy.unsafe, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Attribute, AttributeRuleTypeEnum, Namespace, Value } from "../objects_pb";

/**
 * Describes the file policy/unsafe/unsafe.proto.
 */
export declare const file_policy_unsafe_unsafe: GenFile;

/**
 * WARNING!!
 * Updating the Namespace of an Attribute will retroactively alter access to existing TDFs of the old and new Namespace name.
 * Existing Attribute Definitions and their Values under the Namespace will now be associated with the new Namespace name.
 *
 * @generated from message policy.unsafe.UnsafeUpdateNamespaceRequest
 */
export declare type UnsafeUpdateNamespaceRequest = Message<"policy.unsafe.UnsafeUpdateNamespaceRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message policy.unsafe.UnsafeUpdateNamespaceRequest.
 * Use `create(UnsafeUpdateNamespaceRequestSchema)` to create a new message.
 */
export declare const UnsafeUpdateNamespaceRequestSchema: GenMessage<UnsafeUpdateNamespaceRequest>;

/**
 * @generated from message policy.unsafe.UnsafeUpdateNamespaceResponse
 */
export declare type UnsafeUpdateNamespaceResponse = Message<"policy.unsafe.UnsafeUpdateNamespaceResponse"> & {
  /**
   * @generated from field: policy.Namespace namespace = 1;
   */
  namespace?: Namespace;
};

/**
 * Describes the message policy.unsafe.UnsafeUpdateNamespaceResponse.
 * Use `create(UnsafeUpdateNamespaceResponseSchema)` to create a new message.
 */
export declare const UnsafeUpdateNamespaceResponseSchema: GenMessage<UnsafeUpdateNamespaceResponse>;

/**
 * WARNING!!
 * Reactivating a Namespace can potentially open up an access path to existing TDFs containing any Attributes under the Namespace.
 * Active state of any Definitions and their Values under this Namespace will NOT be changed.
 *
 * @generated from message policy.unsafe.UnsafeReactivateNamespaceRequest
 */
export declare type UnsafeReactivateNamespaceRequest = Message<"policy.unsafe.UnsafeReactivateNamespaceRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.unsafe.UnsafeReactivateNamespaceRequest.
 * Use `create(UnsafeReactivateNamespaceRequestSchema)` to create a new message.
 */
export declare const UnsafeReactivateNamespaceRequestSchema: GenMessage<UnsafeReactivateNamespaceRequest>;

/**
 * @generated from message policy.unsafe.UnsafeReactivateNamespaceResponse
 */
export declare type UnsafeReactivateNamespaceResponse = Message<"policy.unsafe.UnsafeReactivateNamespaceResponse"> & {
  /**
   * @generated from field: policy.Namespace namespace = 1;
   */
  namespace?: Namespace;
};

/**
 * Describes the message policy.unsafe.UnsafeReactivateNamespaceResponse.
 * Use `create(UnsafeReactivateNamespaceResponseSchema)` to create a new message.
 */
export declare const UnsafeReactivateNamespaceResponseSchema: GenMessage<UnsafeReactivateNamespaceResponse>;

/**
 * WARNING!!
 * Deleting a Namespace will free up the Attribute Namespace, Definitions, and Values for reuse, which can introduce an access path to existing TDFs containing the deleted policy.
 * Definitions and their Values under this Namespace will be cascadingly deleted.
 *
 * @generated from message policy.unsafe.UnsafeDeleteNamespaceRequest
 */
export declare type UnsafeDeleteNamespaceRequest = Message<"policy.unsafe.UnsafeDeleteNamespaceRequest"> & {
  /**
   * Required
   * UUID of the Namespace
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   * Fully Qualified Name (FQN) of Namespace (i.e. https://<namespace>), normalized to lower case.
   *
   * @generated from field: string fqn = 2;
   */
  fqn: string;
};

/**
 * Describes the message policy.unsafe.UnsafeDeleteNamespaceRequest.
 * Use `create(UnsafeDeleteNamespaceRequestSchema)` to create a new message.
 */
export declare const UnsafeDeleteNamespaceRequestSchema: GenMessage<UnsafeDeleteNamespaceRequest>;

/**
 * @generated from message policy.unsafe.UnsafeDeleteNamespaceResponse
 */
export declare type UnsafeDeleteNamespaceResponse = Message<"policy.unsafe.UnsafeDeleteNamespaceResponse"> & {
  /**
   * @generated from field: policy.Namespace namespace = 1;
   */
  namespace?: Namespace;
};

/**
 * Describes the message policy.unsafe.UnsafeDeleteNamespaceResponse.
 * Use `create(UnsafeDeleteNamespaceResponseSchema)` to create a new message.
 */
export declare const UnsafeDeleteNamespaceResponseSchema: GenMessage<UnsafeDeleteNamespaceResponse>;

/**
 * WARNING!!
 * Updating an Attribute can have dangerous consequences. Use with caution.
 *
 * @generated from message policy.unsafe.UnsafeUpdateAttributeRequest
 */
export declare type UnsafeUpdateAttributeRequest = Message<"policy.unsafe.UnsafeUpdateAttributeRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional
   * WARNING!! 
   * Updating the name of an Attribute will retroactively alter access to existing TDFs of the old and new Attribute name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Optional
   * WARNING!! 
   * Updating the rule of an Attribute will retroactively alter access to existing TDFs of the Attribute name.
   *
   * @generated from field: policy.AttributeRuleTypeEnum rule = 3;
   */
  rule: AttributeRuleTypeEnum;

  /**
   * Optional
   * WARNING!!
   * Unsafe reordering requires the full list of values in the new order they should be stored. Updating the order of values in a HIERARCHY-rule Attribute Definition
   * will retroactively alter access to existing TDFs containing those values. Replacing values on an attribute in place is not supported; values can be unsafely deleted
   * deleted, created, and unsafely re-ordered as necessary.
   *
   * @generated from field: repeated string values_order = 4;
   */
  valuesOrder: string[];
};

/**
 * Describes the message policy.unsafe.UnsafeUpdateAttributeRequest.
 * Use `create(UnsafeUpdateAttributeRequestSchema)` to create a new message.
 */
export declare const UnsafeUpdateAttributeRequestSchema: GenMessage<UnsafeUpdateAttributeRequest>;

/**
 * @generated from message policy.unsafe.UnsafeUpdateAttributeResponse
 */
export declare type UnsafeUpdateAttributeResponse = Message<"policy.unsafe.UnsafeUpdateAttributeResponse"> & {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message policy.unsafe.UnsafeUpdateAttributeResponse.
 * Use `create(UnsafeUpdateAttributeResponseSchema)` to create a new message.
 */
export declare const UnsafeUpdateAttributeResponseSchema: GenMessage<UnsafeUpdateAttributeResponse>;

/**
 * WARNING!!
 * Reactivating an Attribute can potentially open up an access path to existing TDFs containing the Attribute name.
 * Active state of any Values under this Attribute Definition will NOT be changed.
 *
 * @generated from message policy.unsafe.UnsafeReactivateAttributeRequest
 */
export declare type UnsafeReactivateAttributeRequest = Message<"policy.unsafe.UnsafeReactivateAttributeRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.unsafe.UnsafeReactivateAttributeRequest.
 * Use `create(UnsafeReactivateAttributeRequestSchema)` to create a new message.
 */
export declare const UnsafeReactivateAttributeRequestSchema: GenMessage<UnsafeReactivateAttributeRequest>;

/**
 * @generated from message policy.unsafe.UnsafeReactivateAttributeResponse
 */
export declare type UnsafeReactivateAttributeResponse = Message<"policy.unsafe.UnsafeReactivateAttributeResponse"> & {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message policy.unsafe.UnsafeReactivateAttributeResponse.
 * Use `create(UnsafeReactivateAttributeResponseSchema)` to create a new message.
 */
export declare const UnsafeReactivateAttributeResponseSchema: GenMessage<UnsafeReactivateAttributeResponse>;

/**
 * WARNING!!
 * Deleting an Attribute will free up the Attribute name for reuse, which can introduce an access path to existing TDFs containing the deleted Attribute name.
 * Values under this Attribute will be cascadingly deleted.
 * Any KAS Grants associated with this Attribute will be cascadingly deleted.
 *
 * @generated from message policy.unsafe.UnsafeDeleteAttributeRequest
 */
export declare type UnsafeDeleteAttributeRequest = Message<"policy.unsafe.UnsafeDeleteAttributeRequest"> & {
  /**
   * Required
   * UUID of the Attribute
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   * Fully Qualified Name (FQN) of Attribute Definition (i.e. https://<namespace>/attr/<attribute name>), normalized to lower case.
   *
   * @generated from field: string fqn = 2;
   */
  fqn: string;
};

/**
 * Describes the message policy.unsafe.UnsafeDeleteAttributeRequest.
 * Use `create(UnsafeDeleteAttributeRequestSchema)` to create a new message.
 */
export declare const UnsafeDeleteAttributeRequestSchema: GenMessage<UnsafeDeleteAttributeRequest>;

/**
 * @generated from message policy.unsafe.UnsafeDeleteAttributeResponse
 */
export declare type UnsafeDeleteAttributeResponse = Message<"policy.unsafe.UnsafeDeleteAttributeResponse"> & {
  /**
   * @generated from field: policy.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message policy.unsafe.UnsafeDeleteAttributeResponse.
 * Use `create(UnsafeDeleteAttributeResponseSchema)` to create a new message.
 */
export declare const UnsafeDeleteAttributeResponseSchema: GenMessage<UnsafeDeleteAttributeResponse>;

/**
 * WARNING!! 
 * Updating an Attribute Value will retroactively alter access to existing TDFs containing the old and new Attribute Value.
 *
 * @generated from message policy.unsafe.UnsafeUpdateAttributeValueRequest
 */
export declare type UnsafeUpdateAttributeValueRequest = Message<"policy.unsafe.UnsafeUpdateAttributeValueRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message policy.unsafe.UnsafeUpdateAttributeValueRequest.
 * Use `create(UnsafeUpdateAttributeValueRequestSchema)` to create a new message.
 */
export declare const UnsafeUpdateAttributeValueRequestSchema: GenMessage<UnsafeUpdateAttributeValueRequest>;

/**
 * @generated from message policy.unsafe.UnsafeUpdateAttributeValueResponse
 */
export declare type UnsafeUpdateAttributeValueResponse = Message<"policy.unsafe.UnsafeUpdateAttributeValueResponse"> & {
  /**
   * @generated from field: policy.Value value = 1;
   */
  value?: Value;
};

/**
 * Describes the message policy.unsafe.UnsafeUpdateAttributeValueResponse.
 * Use `create(UnsafeUpdateAttributeValueResponseSchema)` to create a new message.
 */
export declare const UnsafeUpdateAttributeValueResponseSchema: GenMessage<UnsafeUpdateAttributeValueResponse>;

/**
 * WARNING!!
 * Reactivating an Attribute Value can potentially open up an access path to existing TDFs containing the Attribute Value.
 *
 * @generated from message policy.unsafe.UnsafeReactivateAttributeValueRequest
 */
export declare type UnsafeReactivateAttributeValueRequest = Message<"policy.unsafe.UnsafeReactivateAttributeValueRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.unsafe.UnsafeReactivateAttributeValueRequest.
 * Use `create(UnsafeReactivateAttributeValueRequestSchema)` to create a new message.
 */
export declare const UnsafeReactivateAttributeValueRequestSchema: GenMessage<UnsafeReactivateAttributeValueRequest>;

/**
 * @generated from message policy.unsafe.UnsafeReactivateAttributeValueResponse
 */
export declare type UnsafeReactivateAttributeValueResponse = Message<"policy.unsafe.UnsafeReactivateAttributeValueResponse"> & {
  /**
   * @generated from field: policy.Value value = 1;
   */
  value?: Value;
};

/**
 * Describes the message policy.unsafe.UnsafeReactivateAttributeValueResponse.
 * Use `create(UnsafeReactivateAttributeValueResponseSchema)` to create a new message.
 */
export declare const UnsafeReactivateAttributeValueResponseSchema: GenMessage<UnsafeReactivateAttributeValueResponse>;

/**
 * WARNING!!
 * Deleting an Attribute Value will free up the Attribute Value for reuse, which can introduce an access path to existing TDFs containing the deleted Attribute Value.
 * Any KAS Grants associated with this Attribute Value will be cascadingly deleted.
 *
 * @generated from message policy.unsafe.UnsafeDeleteAttributeValueRequest
 */
export declare type UnsafeDeleteAttributeValueRequest = Message<"policy.unsafe.UnsafeDeleteAttributeValueRequest"> & {
  /**
   * Required
   * UUID of the Attribute Value
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required
   * Fully Qualified Name (FQN) of Attribute Value (i.e. https://<namespace>/attr/<attribute name>/value/<value>), normalized to lower case.
   *
   * @generated from field: string fqn = 2;
   */
  fqn: string;
};

/**
 * Describes the message policy.unsafe.UnsafeDeleteAttributeValueRequest.
 * Use `create(UnsafeDeleteAttributeValueRequestSchema)` to create a new message.
 */
export declare const UnsafeDeleteAttributeValueRequestSchema: GenMessage<UnsafeDeleteAttributeValueRequest>;

/**
 * @generated from message policy.unsafe.UnsafeDeleteAttributeValueResponse
 */
export declare type UnsafeDeleteAttributeValueResponse = Message<"policy.unsafe.UnsafeDeleteAttributeValueResponse"> & {
  /**
   * @generated from field: policy.Value value = 1;
   */
  value?: Value;
};

/**
 * Describes the message policy.unsafe.UnsafeDeleteAttributeValueResponse.
 * Use `create(UnsafeDeleteAttributeValueResponseSchema)` to create a new message.
 */
export declare const UnsafeDeleteAttributeValueResponseSchema: GenMessage<UnsafeDeleteAttributeValueResponse>;

/**
 * /
 * / Unsafe Service 
 * / IN FLIGHT AND NOT YET IMPLEMENTED!
 * /
 *
 * @generated from service policy.unsafe.UnsafeService
 */
export declare const UnsafeService: GenService<{
  /**
   * --------------------------------------*
   * Namespace RPCs
   * ---------------------------------------
   *
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeUpdateNamespace
   */
  unsafeUpdateNamespace: {
    methodKind: "unary";
    input: typeof UnsafeUpdateNamespaceRequestSchema;
    output: typeof UnsafeUpdateNamespaceResponseSchema;
  },
  /**
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeReactivateNamespace
   */
  unsafeReactivateNamespace: {
    methodKind: "unary";
    input: typeof UnsafeReactivateNamespaceRequestSchema;
    output: typeof UnsafeReactivateNamespaceResponseSchema;
  },
  /**
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeDeleteNamespace
   */
  unsafeDeleteNamespace: {
    methodKind: "unary";
    input: typeof UnsafeDeleteNamespaceRequestSchema;
    output: typeof UnsafeDeleteNamespaceResponseSchema;
  },
  /**
   * --------------------------------------*
   * Attribute RPCs
   * ---------------------------------------
   *
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeUpdateAttribute
   */
  unsafeUpdateAttribute: {
    methodKind: "unary";
    input: typeof UnsafeUpdateAttributeRequestSchema;
    output: typeof UnsafeUpdateAttributeResponseSchema;
  },
  /**
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeReactivateAttribute
   */
  unsafeReactivateAttribute: {
    methodKind: "unary";
    input: typeof UnsafeReactivateAttributeRequestSchema;
    output: typeof UnsafeReactivateAttributeResponseSchema;
  },
  /**
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeDeleteAttribute
   */
  unsafeDeleteAttribute: {
    methodKind: "unary";
    input: typeof UnsafeDeleteAttributeRequestSchema;
    output: typeof UnsafeDeleteAttributeResponseSchema;
  },
  /**
   * --------------------------------------*
   * Value RPCs
   * ---------------------------------------
   *
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeUpdateAttributeValue
   */
  unsafeUpdateAttributeValue: {
    methodKind: "unary";
    input: typeof UnsafeUpdateAttributeValueRequestSchema;
    output: typeof UnsafeUpdateAttributeValueResponseSchema;
  },
  /**
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeReactivateAttributeValue
   */
  unsafeReactivateAttributeValue: {
    methodKind: "unary";
    input: typeof UnsafeReactivateAttributeValueRequestSchema;
    output: typeof UnsafeReactivateAttributeValueResponseSchema;
  },
  /**
   * @generated from rpc policy.unsafe.UnsafeService.UnsafeDeleteAttributeValue
   */
  unsafeDeleteAttributeValue: {
    methodKind: "unary";
    input: typeof UnsafeDeleteAttributeValueRequestSchema;
    output: typeof UnsafeDeleteAttributeValueResponseSchema;
  },
}>;

