// @generated by protoc-gen-es v2.2.1
// @generated from file policy/kasregistry/key_access_server_registry.proto (package policy.kasregistry, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { KeyAccessServer, PublicKey } from "../objects_pb";
import type { PageRequest, PageResponse } from "../selectors_pb";
import type { MetadataMutable, MetadataUpdateEnum } from "../../common/common_pb";

/**
 * Describes the file policy/kasregistry/key_access_server_registry.proto.
 */
export declare const file_policy_kasregistry_key_access_server_registry: GenFile;

/**
 * @generated from message policy.kasregistry.GetKeyAccessServerRequest
 */
export declare type GetKeyAccessServerRequest = Message<"policy.kasregistry.GetKeyAccessServerRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.kasregistry.GetKeyAccessServerRequest.
 * Use `create(GetKeyAccessServerRequestSchema)` to create a new message.
 */
export declare const GetKeyAccessServerRequestSchema: GenMessage<GetKeyAccessServerRequest>;

/**
 * @generated from message policy.kasregistry.GetKeyAccessServerResponse
 */
export declare type GetKeyAccessServerResponse = Message<"policy.kasregistry.GetKeyAccessServerResponse"> & {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;
};

/**
 * Describes the message policy.kasregistry.GetKeyAccessServerResponse.
 * Use `create(GetKeyAccessServerResponseSchema)` to create a new message.
 */
export declare const GetKeyAccessServerResponseSchema: GenMessage<GetKeyAccessServerResponse>;

/**
 * @generated from message policy.kasregistry.ListKeyAccessServersRequest
 */
export declare type ListKeyAccessServersRequest = Message<"policy.kasregistry.ListKeyAccessServersRequest"> & {
  /**
   * Optional
   *
   * @generated from field: policy.PageRequest pagination = 10;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message policy.kasregistry.ListKeyAccessServersRequest.
 * Use `create(ListKeyAccessServersRequestSchema)` to create a new message.
 */
export declare const ListKeyAccessServersRequestSchema: GenMessage<ListKeyAccessServersRequest>;

/**
 * @generated from message policy.kasregistry.ListKeyAccessServersResponse
 */
export declare type ListKeyAccessServersResponse = Message<"policy.kasregistry.ListKeyAccessServersResponse"> & {
  /**
   * @generated from field: repeated policy.KeyAccessServer key_access_servers = 1;
   */
  keyAccessServers: KeyAccessServer[];

  /**
   * @generated from field: policy.PageResponse pagination = 10;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message policy.kasregistry.ListKeyAccessServersResponse.
 * Use `create(ListKeyAccessServersResponseSchema)` to create a new message.
 */
export declare const ListKeyAccessServersResponseSchema: GenMessage<ListKeyAccessServersResponse>;

/**
 * @generated from message policy.kasregistry.CreateKeyAccessServerRequest
 */
export declare type CreateKeyAccessServerRequest = Message<"policy.kasregistry.CreateKeyAccessServerRequest"> & {
  /**
   * Required
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Required
   *
   * @generated from field: policy.PublicKey public_key = 2;
   */
  publicKey?: PublicKey;

  /**
   * Optional
   *
   * @generated from field: string name = 20;
   */
  name: string;

  /**
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;
};

/**
 * Describes the message policy.kasregistry.CreateKeyAccessServerRequest.
 * Use `create(CreateKeyAccessServerRequestSchema)` to create a new message.
 */
export declare const CreateKeyAccessServerRequestSchema: GenMessage<CreateKeyAccessServerRequest>;

/**
 * @generated from message policy.kasregistry.CreateKeyAccessServerResponse
 */
export declare type CreateKeyAccessServerResponse = Message<"policy.kasregistry.CreateKeyAccessServerResponse"> & {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;
};

/**
 * Describes the message policy.kasregistry.CreateKeyAccessServerResponse.
 * Use `create(CreateKeyAccessServerResponseSchema)` to create a new message.
 */
export declare const CreateKeyAccessServerResponseSchema: GenMessage<CreateKeyAccessServerResponse>;

/**
 * @generated from message policy.kasregistry.UpdateKeyAccessServerRequest
 */
export declare type UpdateKeyAccessServerRequest = Message<"policy.kasregistry.UpdateKeyAccessServerRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * Optional
   *
   * @generated from field: policy.PublicKey public_key = 3;
   */
  publicKey?: PublicKey;

  /**
   * Optional
   *
   * @generated from field: string name = 20;
   */
  name: string;

  /**
   * Optional
   * Common metadata
   *
   * @generated from field: common.MetadataMutable metadata = 100;
   */
  metadata?: MetadataMutable;

  /**
   * @generated from field: common.MetadataUpdateEnum metadata_update_behavior = 101;
   */
  metadataUpdateBehavior: MetadataUpdateEnum;
};

/**
 * Describes the message policy.kasregistry.UpdateKeyAccessServerRequest.
 * Use `create(UpdateKeyAccessServerRequestSchema)` to create a new message.
 */
export declare const UpdateKeyAccessServerRequestSchema: GenMessage<UpdateKeyAccessServerRequest>;

/**
 * @generated from message policy.kasregistry.UpdateKeyAccessServerResponse
 */
export declare type UpdateKeyAccessServerResponse = Message<"policy.kasregistry.UpdateKeyAccessServerResponse"> & {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;
};

/**
 * Describes the message policy.kasregistry.UpdateKeyAccessServerResponse.
 * Use `create(UpdateKeyAccessServerResponseSchema)` to create a new message.
 */
export declare const UpdateKeyAccessServerResponseSchema: GenMessage<UpdateKeyAccessServerResponse>;

/**
 * @generated from message policy.kasregistry.DeleteKeyAccessServerRequest
 */
export declare type DeleteKeyAccessServerRequest = Message<"policy.kasregistry.DeleteKeyAccessServerRequest"> & {
  /**
   * Required
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message policy.kasregistry.DeleteKeyAccessServerRequest.
 * Use `create(DeleteKeyAccessServerRequestSchema)` to create a new message.
 */
export declare const DeleteKeyAccessServerRequestSchema: GenMessage<DeleteKeyAccessServerRequest>;

/**
 * @generated from message policy.kasregistry.DeleteKeyAccessServerResponse
 */
export declare type DeleteKeyAccessServerResponse = Message<"policy.kasregistry.DeleteKeyAccessServerResponse"> & {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;
};

/**
 * Describes the message policy.kasregistry.DeleteKeyAccessServerResponse.
 * Use `create(DeleteKeyAccessServerResponseSchema)` to create a new message.
 */
export declare const DeleteKeyAccessServerResponseSchema: GenMessage<DeleteKeyAccessServerResponse>;

/**
 * Can be namespace, attribute definition, or value
 *
 * @generated from message policy.kasregistry.GrantedPolicyObject
 */
export declare type GrantedPolicyObject = Message<"policy.kasregistry.GrantedPolicyObject"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string fqn = 2;
   */
  fqn: string;
};

/**
 * Describes the message policy.kasregistry.GrantedPolicyObject.
 * Use `create(GrantedPolicyObjectSchema)` to create a new message.
 */
export declare const GrantedPolicyObjectSchema: GenMessage<GrantedPolicyObject>;

/**
 * @generated from message policy.kasregistry.KeyAccessServerGrants
 */
export declare type KeyAccessServerGrants = Message<"policy.kasregistry.KeyAccessServerGrants"> & {
  /**
   * @generated from field: policy.KeyAccessServer key_access_server = 1;
   */
  keyAccessServer?: KeyAccessServer;

  /**
   * @generated from field: repeated policy.kasregistry.GrantedPolicyObject namespace_grants = 2;
   */
  namespaceGrants: GrantedPolicyObject[];

  /**
   * @generated from field: repeated policy.kasregistry.GrantedPolicyObject attribute_grants = 3;
   */
  attributeGrants: GrantedPolicyObject[];

  /**
   * @generated from field: repeated policy.kasregistry.GrantedPolicyObject value_grants = 4;
   */
  valueGrants: GrantedPolicyObject[];
};

/**
 * Describes the message policy.kasregistry.KeyAccessServerGrants.
 * Use `create(KeyAccessServerGrantsSchema)` to create a new message.
 */
export declare const KeyAccessServerGrantsSchema: GenMessage<KeyAccessServerGrants>;

/**
 * LIST of KAS Grants returns flat response of grants to all policy objects. It does not
 * employ selectors for grants to specific policy objects or build the attribute tree relation.
 * If grants to a known namespace, attribute, or value are needed, use the respective
 * GET request to the specific policy object.
 *
 * @generated from message policy.kasregistry.ListKeyAccessServerGrantsRequest
 */
export declare type ListKeyAccessServerGrantsRequest = Message<"policy.kasregistry.ListKeyAccessServerGrantsRequest"> & {
  /**
   * Optional
   * Filter LIST by ID of a registered Key Access Server.
   * If neither is provided, grants from all registered KASs to policy attribute objects are returned.
   *
   * @generated from field: string kas_id = 1;
   */
  kasId: string;

  /**
   * Optional
   * Filter LIST by URI of a registered Key Access Server.
   * If none is provided, grants from all registered KASs to policy attribute objects are returned.
   *
   * @generated from field: string kas_uri = 2;
   */
  kasUri: string;

  /**
   * Optional
   * Filter LIST by name of a registered Key Access Server.
   * If none are provided, grants from all registered KASs to policy attribute objects are returned.
   *
   * @generated from field: string kas_name = 3;
   */
  kasName: string;

  /**
   * Optional
   *
   * @generated from field: policy.PageRequest pagination = 10;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message policy.kasregistry.ListKeyAccessServerGrantsRequest.
 * Use `create(ListKeyAccessServerGrantsRequestSchema)` to create a new message.
 */
export declare const ListKeyAccessServerGrantsRequestSchema: GenMessage<ListKeyAccessServerGrantsRequest>;

/**
 * @generated from message policy.kasregistry.ListKeyAccessServerGrantsResponse
 */
export declare type ListKeyAccessServerGrantsResponse = Message<"policy.kasregistry.ListKeyAccessServerGrantsResponse"> & {
  /**
   * @generated from field: repeated policy.kasregistry.KeyAccessServerGrants grants = 1;
   */
  grants: KeyAccessServerGrants[];

  /**
   * @generated from field: policy.PageResponse pagination = 10;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message policy.kasregistry.ListKeyAccessServerGrantsResponse.
 * Use `create(ListKeyAccessServerGrantsResponseSchema)` to create a new message.
 */
export declare const ListKeyAccessServerGrantsResponseSchema: GenMessage<ListKeyAccessServerGrantsResponse>;

/**
 * @generated from service policy.kasregistry.KeyAccessServerRegistryService
 */
export declare const KeyAccessServerRegistryService: GenService<{
  /**
   * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.ListKeyAccessServers
   */
  listKeyAccessServers: {
    methodKind: "unary";
    input: typeof ListKeyAccessServersRequestSchema;
    output: typeof ListKeyAccessServersResponseSchema;
  },
  /**
   * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.GetKeyAccessServer
   */
  getKeyAccessServer: {
    methodKind: "unary";
    input: typeof GetKeyAccessServerRequestSchema;
    output: typeof GetKeyAccessServerResponseSchema;
  },
  /**
   * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.CreateKeyAccessServer
   */
  createKeyAccessServer: {
    methodKind: "unary";
    input: typeof CreateKeyAccessServerRequestSchema;
    output: typeof CreateKeyAccessServerResponseSchema;
  },
  /**
   * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.UpdateKeyAccessServer
   */
  updateKeyAccessServer: {
    methodKind: "unary";
    input: typeof UpdateKeyAccessServerRequestSchema;
    output: typeof UpdateKeyAccessServerResponseSchema;
  },
  /**
   * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.DeleteKeyAccessServer
   */
  deleteKeyAccessServer: {
    methodKind: "unary";
    input: typeof DeleteKeyAccessServerRequestSchema;
    output: typeof DeleteKeyAccessServerResponseSchema;
  },
  /**
   * @generated from rpc policy.kasregistry.KeyAccessServerRegistryService.ListKeyAccessServerGrants
   */
  listKeyAccessServerGrants: {
    methodKind: "unary";
    input: typeof ListKeyAccessServerGrantsRequestSchema;
    output: typeof ListKeyAccessServerGrantsResponseSchema;
  },
}>;

