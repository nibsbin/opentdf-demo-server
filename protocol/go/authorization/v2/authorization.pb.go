// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: authorization/v2/authorization.proto

package authorizationv2

import (
	policy "github.com/opentdf/platform/protocol/go/policy"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Entity_Category int32

const (
	Entity_CATEGORY_UNSPECIFIED Entity_Category = 0
	Entity_CATEGORY_SUBJECT     Entity_Category = 1
	Entity_CATEGORY_ENVIRONMENT Entity_Category = 2
)

// Enum value maps for Entity_Category.
var (
	Entity_Category_name = map[int32]string{
		0: "CATEGORY_UNSPECIFIED",
		1: "CATEGORY_SUBJECT",
		2: "CATEGORY_ENVIRONMENT",
	}
	Entity_Category_value = map[string]int32{
		"CATEGORY_UNSPECIFIED": 0,
		"CATEGORY_SUBJECT":     1,
		"CATEGORY_ENVIRONMENT": 2,
	}
)

func (x Entity_Category) Enum() *Entity_Category {
	p := new(Entity_Category)
	*p = x
	return p
}

func (x Entity_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Entity_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_authorization_v2_authorization_proto_enumTypes[0].Descriptor()
}

func (Entity_Category) Type() protoreflect.EnumType {
	return &file_authorization_v2_authorization_proto_enumTypes[0]
}

func (x Entity_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Entity_Category.Descriptor instead.
func (Entity_Category) EnumDescriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{1, 0}
}

type DecisionResponse_Decision int32

const (
	DecisionResponse_DECISION_UNSPECIFIED DecisionResponse_Decision = 0
	DecisionResponse_DECISION_DENY        DecisionResponse_Decision = 1
	DecisionResponse_DECISION_PERMIT      DecisionResponse_Decision = 2 // DECISION_OBLIGATED = 3;
)

// Enum value maps for DecisionResponse_Decision.
var (
	DecisionResponse_Decision_name = map[int32]string{
		0: "DECISION_UNSPECIFIED",
		1: "DECISION_DENY",
		2: "DECISION_PERMIT",
	}
	DecisionResponse_Decision_value = map[string]int32{
		"DECISION_UNSPECIFIED": 0,
		"DECISION_DENY":        1,
		"DECISION_PERMIT":      2,
	}
)

func (x DecisionResponse_Decision) Enum() *DecisionResponse_Decision {
	p := new(DecisionResponse_Decision)
	*p = x
	return p
}

func (x DecisionResponse_Decision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DecisionResponse_Decision) Descriptor() protoreflect.EnumDescriptor {
	return file_authorization_v2_authorization_proto_enumTypes[1].Descriptor()
}

func (DecisionResponse_Decision) Type() protoreflect.EnumType {
	return &file_authorization_v2_authorization_proto_enumTypes[1]
}

func (x DecisionResponse_Decision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DecisionResponse_Decision.Descriptor instead.
func (DecisionResponse_Decision) EnumDescriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{7, 0}
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ephemeral id for tracking between request and response
	EphemeralId string `protobuf:"bytes,1,opt,name=ephemeral_id,json=ephemeralId,proto3" json:"ephemeral_id,omitempty"`
	// access token
	Jwt string `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetEphemeralId() string {
	if x != nil {
		return x.EphemeralId
	}
	return ""
}

func (x *Token) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

// PE (Person Entity) or NPE (Non-Person Entity)
type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ephemeral id for tracking between request and response
	EphemeralId string `protobuf:"bytes,1,opt,name=ephemeral_id,json=ephemeralId,proto3" json:"ephemeral_id,omitempty"`
	// Standard entity types supported by the platform
	//
	// Types that are assignable to EntityType:
	//
	//	*Entity_EmailAddress
	//	*Entity_UserName
	//	*Entity_Custom
	//	*Entity_ClientId
	//	*Entity_RegisteredResourceValueFqn
	EntityType isEntity_EntityType `protobuf_oneof:"entity_type"`
	Category   Entity_Category     `protobuf:"varint,9,opt,name=category,proto3,enum=authorization.v2.Entity_Category" json:"category,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{1}
}

func (x *Entity) GetEphemeralId() string {
	if x != nil {
		return x.EphemeralId
	}
	return ""
}

func (m *Entity) GetEntityType() isEntity_EntityType {
	if m != nil {
		return m.EntityType
	}
	return nil
}

func (x *Entity) GetEmailAddress() string {
	if x, ok := x.GetEntityType().(*Entity_EmailAddress); ok {
		return x.EmailAddress
	}
	return ""
}

func (x *Entity) GetUserName() string {
	if x, ok := x.GetEntityType().(*Entity_UserName); ok {
		return x.UserName
	}
	return ""
}

func (x *Entity) GetCustom() *EntityCustom {
	if x, ok := x.GetEntityType().(*Entity_Custom); ok {
		return x.Custom
	}
	return nil
}

func (x *Entity) GetClientId() string {
	if x, ok := x.GetEntityType().(*Entity_ClientId); ok {
		return x.ClientId
	}
	return ""
}

func (x *Entity) GetRegisteredResourceValueFqn() string {
	if x, ok := x.GetEntityType().(*Entity_RegisteredResourceValueFqn); ok {
		return x.RegisteredResourceValueFqn
	}
	return ""
}

func (x *Entity) GetCategory() Entity_Category {
	if x != nil {
		return x.Category
	}
	return Entity_CATEGORY_UNSPECIFIED
}

type isEntity_EntityType interface {
	isEntity_EntityType()
}

type Entity_EmailAddress struct {
	// one of the entity options must be set
	EmailAddress string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3,oneof"`
}

type Entity_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

type Entity_Custom struct {
	Custom *EntityCustom `protobuf:"bytes,4,opt,name=custom,proto3,oneof"`
}

type Entity_ClientId struct {
	ClientId string `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3,oneof"`
}

type Entity_RegisteredResourceValueFqn struct {
	RegisteredResourceValueFqn string `protobuf:"bytes,6,opt,name=registered_resource_value_fqn,json=registeredResourceValueFqn,proto3,oneof"`
}

func (*Entity_EmailAddress) isEntity_EntityType() {}

func (*Entity_UserName) isEntity_EntityType() {}

func (*Entity_Custom) isEntity_EntityType() {}

func (*Entity_ClientId) isEntity_EntityType() {}

func (*Entity_RegisteredResourceValueFqn) isEntity_EntityType() {}

// Entity type for custom entities beyond the standard types
type EntityCustom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extension *anypb.Any `protobuf:"bytes,1,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *EntityCustom) Reset() {
	*x = EntityCustom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityCustom) ProtoMessage() {}

func (x *EntityCustom) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityCustom.ProtoReflect.Descriptor instead.
func (*EntityCustom) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{2}
}

func (x *EntityCustom) GetExtension() *anypb.Any {
	if x != nil {
		return x.Extension
	}
	return nil
}

// A set of related PE and NPE
type EntityChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ephemeral id for tracking between request and response
	EphemeralId string    `protobuf:"bytes,1,opt,name=ephemeral_id,json=ephemeralId,proto3" json:"ephemeral_id,omitempty"`
	Entities    []*Entity `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *EntityChain) Reset() {
	*x = EntityChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityChain) ProtoMessage() {}

func (x *EntityChain) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityChain.ProtoReflect.Descriptor instead.
func (*EntityChain) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{3}
}

func (x *EntityChain) GetEphemeralId() string {
	if x != nil {
		return x.EphemeralId
	}
	return ""
}

func (x *EntityChain) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// Entitlements for a given entity, mapping each attribute value FQN to any entitled actions[]
type EntityEntitlements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EphemeralId                 string                                     `protobuf:"bytes,1,opt,name=ephemeral_id,json=ephemeralId,proto3" json:"ephemeral_id,omitempty"`
	ActionsPerAttributeValueFqn map[string]*EntityEntitlements_ActionsList `protobuf:"bytes,2,rep,name=actions_per_attribute_value_fqn,json=actionsPerAttributeValueFqn,proto3" json:"actions_per_attribute_value_fqn,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EntityEntitlements) Reset() {
	*x = EntityEntitlements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityEntitlements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityEntitlements) ProtoMessage() {}

func (x *EntityEntitlements) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityEntitlements.ProtoReflect.Descriptor instead.
func (*EntityEntitlements) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{4}
}

func (x *EntityEntitlements) GetEphemeralId() string {
	if x != nil {
		return x.EphemeralId
	}
	return ""
}

func (x *EntityEntitlements) GetActionsPerAttributeValueFqn() map[string]*EntityEntitlements_ActionsList {
	if x != nil {
		return x.ActionsPerAttributeValueFqn
	}
	return nil
}

// Either a registered resource or a set of attribute values
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ephemeral id for tracking between request and response
	EphemeralId string `protobuf:"bytes,1,opt,name=ephemeral_id,json=ephemeralId,proto3" json:"ephemeral_id,omitempty"`
	// Types that are assignable to Resource:
	//
	//	*Resource_AttributeValues_
	//	*Resource_RegisteredResourceValueFqn
	Resource isResource_Resource `protobuf_oneof:"resource"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{5}
}

func (x *Resource) GetEphemeralId() string {
	if x != nil {
		return x.EphemeralId
	}
	return ""
}

func (m *Resource) GetResource() isResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *Resource) GetAttributeValues() *Resource_AttributeValues {
	if x, ok := x.GetResource().(*Resource_AttributeValues_); ok {
		return x.AttributeValues
	}
	return nil
}

func (x *Resource) GetRegisteredResourceValueFqn() string {
	if x, ok := x.GetResource().(*Resource_RegisteredResourceValueFqn); ok {
		return x.RegisteredResourceValueFqn
	}
	return ""
}

type isResource_Resource interface {
	isResource_Resource()
}

type Resource_AttributeValues_ struct {
	AttributeValues *Resource_AttributeValues `protobuf:"bytes,2,opt,name=attribute_values,json=attributeValues,proto3,oneof"`
}

type Resource_RegisteredResourceValueFqn struct {
	RegisteredResourceValueFqn string `protobuf:"bytes,3,opt,name=registered_resource_value_fqn,json=registeredResourceValueFqn,proto3,oneof"`
}

func (*Resource_AttributeValues_) isResource_Resource() {}

func (*Resource_RegisteredResourceValueFqn) isResource_Resource() {}

// Can the entity (PE or NPE) represented by each entity chain take the provided action on the each resource
type DecisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity    *EntityChain   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Action    *policy.Action `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Resources []*Resource    `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *DecisionRequest) Reset() {
	*x = DecisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionRequest) ProtoMessage() {}

func (x *DecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionRequest.ProtoReflect.Descriptor instead.
func (*DecisionRequest) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{6}
}

func (x *DecisionRequest) GetEntity() *EntityChain {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DecisionRequest) GetAction() *policy.Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *DecisionRequest) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type DecisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ephemeral id for tracking between request and response
	EphemeralEntityChainId string `protobuf:"bytes,1,opt,name=ephemeral_entity_chain_id,json=ephemeralEntityChainId,proto3" json:"ephemeral_entity_chain_id,omitempty"`
	// ephemeral id for tracking between request and response
	EphemeralResourceId string `protobuf:"bytes,2,opt,name=ephemeral_resource_id,json=ephemeralResourceId,proto3" json:"ephemeral_resource_id,omitempty"`
	// action that was requested
	Action *policy.Action `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	// the decision response
	Decision DecisionResponse_Decision `protobuf:"varint,4,opt,name=decision,proto3,enum=authorization.v2.DecisionResponse_Decision" json:"decision,omitempty"`
}

func (x *DecisionResponse) Reset() {
	*x = DecisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionResponse) ProtoMessage() {}

func (x *DecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionResponse.ProtoReflect.Descriptor instead.
func (*DecisionResponse) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{7}
}

func (x *DecisionResponse) GetEphemeralEntityChainId() string {
	if x != nil {
		return x.EphemeralEntityChainId
	}
	return ""
}

func (x *DecisionResponse) GetEphemeralResourceId() string {
	if x != nil {
		return x.EphemeralResourceId
	}
	return ""
}

func (x *DecisionResponse) GetAction() *policy.Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *DecisionResponse) GetDecision() DecisionResponse_Decision {
	if x != nil {
		return x.Decision
	}
	return DecisionResponse_DECISION_UNSPECIFIED
}

type GetDecisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionRequest *DecisionRequest `protobuf:"bytes,1,opt,name=decision_request,json=decisionRequest,proto3" json:"decision_request,omitempty"`
}

func (x *GetDecisionRequest) Reset() {
	*x = GetDecisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionRequest) ProtoMessage() {}

func (x *GetDecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionRequest.ProtoReflect.Descriptor instead.
func (*GetDecisionRequest) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{8}
}

func (x *GetDecisionRequest) GetDecisionRequest() *DecisionRequest {
	if x != nil {
		return x.DecisionRequest
	}
	return nil
}

type GetDecisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionResponse *DecisionResponse `protobuf:"bytes,1,opt,name=decision_response,json=decisionResponse,proto3" json:"decision_response,omitempty"`
}

func (x *GetDecisionResponse) Reset() {
	*x = GetDecisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionResponse) ProtoMessage() {}

func (x *GetDecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionResponse.ProtoReflect.Descriptor instead.
func (*GetDecisionResponse) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{9}
}

func (x *GetDecisionResponse) GetDecisionResponse() *DecisionResponse {
	if x != nil {
		return x.DecisionResponse
	}
	return nil
}

// More performant bulk request for multiple decisions
type GetDecisionBulkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionRequests []*DecisionRequest `protobuf:"bytes,1,rep,name=decision_requests,json=decisionRequests,proto3" json:"decision_requests,omitempty"`
}

func (x *GetDecisionBulkRequest) Reset() {
	*x = GetDecisionBulkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionBulkRequest) ProtoMessage() {}

func (x *GetDecisionBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionBulkRequest.ProtoReflect.Descriptor instead.
func (*GetDecisionBulkRequest) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{10}
}

func (x *GetDecisionBulkRequest) GetDecisionRequests() []*DecisionRequest {
	if x != nil {
		return x.DecisionRequests
	}
	return nil
}

type GetDecisionBulkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionResponses []*DecisionResponse `protobuf:"bytes,1,rep,name=decision_responses,json=decisionResponses,proto3" json:"decision_responses,omitempty"`
}

func (x *GetDecisionBulkResponse) Reset() {
	*x = GetDecisionBulkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionBulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionBulkResponse) ProtoMessage() {}

func (x *GetDecisionBulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionBulkResponse.ProtoReflect.Descriptor instead.
func (*GetDecisionBulkResponse) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{11}
}

func (x *GetDecisionBulkResponse) GetDecisionResponses() []*DecisionResponse {
	if x != nil {
		return x.DecisionResponses
	}
	return nil
}

type GetEntitlementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of requested entities
	// todo: should this be an entity chain?
	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	// optional resource as a scope
	Scope *Resource `protobuf:"bytes,2,opt,name=scope,proto3,oneof" json:"scope,omitempty"`
	// optional parameter to return a full list of entitlements - returns lower hierarchy attributes
	WithComprehensiveHierarchy *bool `protobuf:"varint,3,opt,name=with_comprehensive_hierarchy,json=withComprehensiveHierarchy,proto3,oneof" json:"with_comprehensive_hierarchy,omitempty"`
}

func (x *GetEntitlementsRequest) Reset() {
	*x = GetEntitlementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntitlementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntitlementsRequest) ProtoMessage() {}

func (x *GetEntitlementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntitlementsRequest.ProtoReflect.Descriptor instead.
func (*GetEntitlementsRequest) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{12}
}

func (x *GetEntitlementsRequest) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *GetEntitlementsRequest) GetScope() *Resource {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *GetEntitlementsRequest) GetWithComprehensiveHierarchy() bool {
	if x != nil && x.WithComprehensiveHierarchy != nil {
		return *x.WithComprehensiveHierarchy
	}
	return false
}

type GetEntitlementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entitlements []*EntityEntitlements `protobuf:"bytes,1,rep,name=entitlements,proto3" json:"entitlements,omitempty"`
}

func (x *GetEntitlementsResponse) Reset() {
	*x = GetEntitlementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntitlementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntitlementsResponse) ProtoMessage() {}

func (x *GetEntitlementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntitlementsResponse.ProtoReflect.Descriptor instead.
func (*GetEntitlementsResponse) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{13}
}

func (x *GetEntitlementsResponse) GetEntitlements() []*EntityEntitlements {
	if x != nil {
		return x.Entitlements
	}
	return nil
}

// Can the entity (PE or NPE) represented by this token take the provided action on the set of resources
type TokenDecisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    *Token         `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Action   *policy.Action `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Resource *Resource      `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *TokenDecisionRequest) Reset() {
	*x = TokenDecisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenDecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenDecisionRequest) ProtoMessage() {}

func (x *TokenDecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenDecisionRequest.ProtoReflect.Descriptor instead.
func (*TokenDecisionRequest) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{14}
}

func (x *TokenDecisionRequest) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TokenDecisionRequest) GetAction() *policy.Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *TokenDecisionRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type GetDecisionByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionRequest *TokenDecisionRequest `protobuf:"bytes,1,opt,name=decision_request,json=decisionRequest,proto3" json:"decision_request,omitempty"`
}

func (x *GetDecisionByTokenRequest) Reset() {
	*x = GetDecisionByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionByTokenRequest) ProtoMessage() {}

func (x *GetDecisionByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetDecisionByTokenRequest) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{15}
}

func (x *GetDecisionByTokenRequest) GetDecisionRequest() *TokenDecisionRequest {
	if x != nil {
		return x.DecisionRequest
	}
	return nil
}

type GetDecisionByTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionResponse *DecisionResponse `protobuf:"bytes,1,opt,name=decision_response,json=decisionResponse,proto3" json:"decision_response,omitempty"`
}

func (x *GetDecisionByTokenResponse) Reset() {
	*x = GetDecisionByTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionByTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionByTokenResponse) ProtoMessage() {}

func (x *GetDecisionByTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionByTokenResponse.ProtoReflect.Descriptor instead.
func (*GetDecisionByTokenResponse) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{16}
}

func (x *GetDecisionByTokenResponse) GetDecisionResponse() *DecisionResponse {
	if x != nil {
		return x.DecisionResponse
	}
	return nil
}

// More performant bulk request for multiple decisions
type GetDecisionBulkByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionRequests []*TokenDecisionRequest `protobuf:"bytes,1,rep,name=decision_requests,json=decisionRequests,proto3" json:"decision_requests,omitempty"`
}

func (x *GetDecisionBulkByTokenRequest) Reset() {
	*x = GetDecisionBulkByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionBulkByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionBulkByTokenRequest) ProtoMessage() {}

func (x *GetDecisionBulkByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionBulkByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetDecisionBulkByTokenRequest) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{17}
}

func (x *GetDecisionBulkByTokenRequest) GetDecisionRequests() []*TokenDecisionRequest {
	if x != nil {
		return x.DecisionRequests
	}
	return nil
}

type GetDecisionBulkByTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecisionResponses []*DecisionResponse `protobuf:"bytes,1,rep,name=decision_responses,json=decisionResponses,proto3" json:"decision_responses,omitempty"`
}

func (x *GetDecisionBulkByTokenResponse) Reset() {
	*x = GetDecisionBulkByTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDecisionBulkByTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionBulkByTokenResponse) ProtoMessage() {}

func (x *GetDecisionBulkByTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionBulkByTokenResponse.ProtoReflect.Descriptor instead.
func (*GetDecisionBulkByTokenResponse) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{18}
}

func (x *GetDecisionBulkByTokenResponse) GetDecisionResponses() []*DecisionResponse {
	if x != nil {
		return x.DecisionResponses
	}
	return nil
}

type EntityEntitlements_ActionsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*policy.Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *EntityEntitlements_ActionsList) Reset() {
	*x = EntityEntitlements_ActionsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityEntitlements_ActionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityEntitlements_ActionsList) ProtoMessage() {}

func (x *EntityEntitlements_ActionsList) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityEntitlements_ActionsList.ProtoReflect.Descriptor instead.
func (*EntityEntitlements_ActionsList) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{4, 0}
}

func (x *EntityEntitlements_ActionsList) GetActions() []*policy.Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Resource_AttributeValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqns []string `protobuf:"bytes,1,rep,name=fqns,proto3" json:"fqns,omitempty"`
}

func (x *Resource_AttributeValues) Reset() {
	*x = Resource_AttributeValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_v2_authorization_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_AttributeValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_AttributeValues) ProtoMessage() {}

func (x *Resource_AttributeValues) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_v2_authorization_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_AttributeValues.ProtoReflect.Descriptor instead.
func (*Resource_AttributeValues) Descriptor() ([]byte, []int) {
	return file_authorization_v2_authorization_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Resource_AttributeValues) GetFqns() []string {
	if x != nil {
		return x.Fqns
	}
	return nil
}

var File_authorization_v2_authorization_proto protoreflect.FileDescriptor

var file_authorization_v2_authorization_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x05, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0xb3, 0x03, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x1d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x66, 0x71, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x1a, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x71, 0x6e, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x54, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x55, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x42, 0x0d,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x42, 0x0a,
	0x0c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x32, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x66, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x81, 0x03, 0x0a, 0x12, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x8b, 0x01, 0x0a, 0x1f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x66, 0x71, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x71, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x1b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x71,
	0x6e, 0x1a, 0x37, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x20, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x71, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70,
	0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x57, 0x0a,
	0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x1d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x66, 0x71, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x1a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x71, 0x6e, 0x1a, 0x25, 0x0a, 0x0f, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x71, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71,
	0x6e, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xaa,
	0x01, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xc0, 0x02, 0x0a, 0x10,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x19, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x70, 0x68, 0x65,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x4c, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14,
	0x44, 0x45, 0x43, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x43, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x43,
	0x49, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x22, 0x62,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x66, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x64, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x10, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x12, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x11, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x1c, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65,
	0x5f, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x01, 0x52, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65,
	0x6e, 0x73, 0x69, 0x76, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x1f, 0x0a, 0x1d, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69,
	0x76, 0x65, 0x5f, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x22, 0x63, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6e, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x11, 0x64, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x64, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x73,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c,
	0x6b, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x12, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x11, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x32, 0xba, 0x04, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x12, 0x28, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x75, 0x6c, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0xd5, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x42, 0x12, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x74, 0x64, 0x66, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa,
	0x02, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x56, 0x32, 0xca, 0x02, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authorization_v2_authorization_proto_rawDescOnce sync.Once
	file_authorization_v2_authorization_proto_rawDescData = file_authorization_v2_authorization_proto_rawDesc
)

func file_authorization_v2_authorization_proto_rawDescGZIP() []byte {
	file_authorization_v2_authorization_proto_rawDescOnce.Do(func() {
		file_authorization_v2_authorization_proto_rawDescData = protoimpl.X.CompressGZIP(file_authorization_v2_authorization_proto_rawDescData)
	})
	return file_authorization_v2_authorization_proto_rawDescData
}

var file_authorization_v2_authorization_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_authorization_v2_authorization_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_authorization_v2_authorization_proto_goTypes = []interface{}{
	(Entity_Category)(0),                   // 0: authorization.v2.Entity.Category
	(DecisionResponse_Decision)(0),         // 1: authorization.v2.DecisionResponse.Decision
	(*Token)(nil),                          // 2: authorization.v2.Token
	(*Entity)(nil),                         // 3: authorization.v2.Entity
	(*EntityCustom)(nil),                   // 4: authorization.v2.EntityCustom
	(*EntityChain)(nil),                    // 5: authorization.v2.EntityChain
	(*EntityEntitlements)(nil),             // 6: authorization.v2.EntityEntitlements
	(*Resource)(nil),                       // 7: authorization.v2.Resource
	(*DecisionRequest)(nil),                // 8: authorization.v2.DecisionRequest
	(*DecisionResponse)(nil),               // 9: authorization.v2.DecisionResponse
	(*GetDecisionRequest)(nil),             // 10: authorization.v2.GetDecisionRequest
	(*GetDecisionResponse)(nil),            // 11: authorization.v2.GetDecisionResponse
	(*GetDecisionBulkRequest)(nil),         // 12: authorization.v2.GetDecisionBulkRequest
	(*GetDecisionBulkResponse)(nil),        // 13: authorization.v2.GetDecisionBulkResponse
	(*GetEntitlementsRequest)(nil),         // 14: authorization.v2.GetEntitlementsRequest
	(*GetEntitlementsResponse)(nil),        // 15: authorization.v2.GetEntitlementsResponse
	(*TokenDecisionRequest)(nil),           // 16: authorization.v2.TokenDecisionRequest
	(*GetDecisionByTokenRequest)(nil),      // 17: authorization.v2.GetDecisionByTokenRequest
	(*GetDecisionByTokenResponse)(nil),     // 18: authorization.v2.GetDecisionByTokenResponse
	(*GetDecisionBulkByTokenRequest)(nil),  // 19: authorization.v2.GetDecisionBulkByTokenRequest
	(*GetDecisionBulkByTokenResponse)(nil), // 20: authorization.v2.GetDecisionBulkByTokenResponse
	(*EntityEntitlements_ActionsList)(nil), // 21: authorization.v2.EntityEntitlements.ActionsList
	nil,                                    // 22: authorization.v2.EntityEntitlements.ActionsPerAttributeValueFqnEntry
	(*Resource_AttributeValues)(nil),       // 23: authorization.v2.Resource.AttributeValues
	(*anypb.Any)(nil),                      // 24: google.protobuf.Any
	(*policy.Action)(nil),                  // 25: policy.Action
}
var file_authorization_v2_authorization_proto_depIdxs = []int32{
	4,  // 0: authorization.v2.Entity.custom:type_name -> authorization.v2.EntityCustom
	0,  // 1: authorization.v2.Entity.category:type_name -> authorization.v2.Entity.Category
	24, // 2: authorization.v2.EntityCustom.extension:type_name -> google.protobuf.Any
	3,  // 3: authorization.v2.EntityChain.entities:type_name -> authorization.v2.Entity
	22, // 4: authorization.v2.EntityEntitlements.actions_per_attribute_value_fqn:type_name -> authorization.v2.EntityEntitlements.ActionsPerAttributeValueFqnEntry
	23, // 5: authorization.v2.Resource.attribute_values:type_name -> authorization.v2.Resource.AttributeValues
	5,  // 6: authorization.v2.DecisionRequest.entity:type_name -> authorization.v2.EntityChain
	25, // 7: authorization.v2.DecisionRequest.action:type_name -> policy.Action
	7,  // 8: authorization.v2.DecisionRequest.resources:type_name -> authorization.v2.Resource
	25, // 9: authorization.v2.DecisionResponse.action:type_name -> policy.Action
	1,  // 10: authorization.v2.DecisionResponse.decision:type_name -> authorization.v2.DecisionResponse.Decision
	8,  // 11: authorization.v2.GetDecisionRequest.decision_request:type_name -> authorization.v2.DecisionRequest
	9,  // 12: authorization.v2.GetDecisionResponse.decision_response:type_name -> authorization.v2.DecisionResponse
	8,  // 13: authorization.v2.GetDecisionBulkRequest.decision_requests:type_name -> authorization.v2.DecisionRequest
	9,  // 14: authorization.v2.GetDecisionBulkResponse.decision_responses:type_name -> authorization.v2.DecisionResponse
	3,  // 15: authorization.v2.GetEntitlementsRequest.entities:type_name -> authorization.v2.Entity
	7,  // 16: authorization.v2.GetEntitlementsRequest.scope:type_name -> authorization.v2.Resource
	6,  // 17: authorization.v2.GetEntitlementsResponse.entitlements:type_name -> authorization.v2.EntityEntitlements
	2,  // 18: authorization.v2.TokenDecisionRequest.token:type_name -> authorization.v2.Token
	25, // 19: authorization.v2.TokenDecisionRequest.action:type_name -> policy.Action
	7,  // 20: authorization.v2.TokenDecisionRequest.resource:type_name -> authorization.v2.Resource
	16, // 21: authorization.v2.GetDecisionByTokenRequest.decision_request:type_name -> authorization.v2.TokenDecisionRequest
	9,  // 22: authorization.v2.GetDecisionByTokenResponse.decision_response:type_name -> authorization.v2.DecisionResponse
	16, // 23: authorization.v2.GetDecisionBulkByTokenRequest.decision_requests:type_name -> authorization.v2.TokenDecisionRequest
	9,  // 24: authorization.v2.GetDecisionBulkByTokenResponse.decision_responses:type_name -> authorization.v2.DecisionResponse
	25, // 25: authorization.v2.EntityEntitlements.ActionsList.actions:type_name -> policy.Action
	21, // 26: authorization.v2.EntityEntitlements.ActionsPerAttributeValueFqnEntry.value:type_name -> authorization.v2.EntityEntitlements.ActionsList
	10, // 27: authorization.v2.AuthorizationService.GetDecision:input_type -> authorization.v2.GetDecisionRequest
	12, // 28: authorization.v2.AuthorizationService.GetDecisionBulk:input_type -> authorization.v2.GetDecisionBulkRequest
	17, // 29: authorization.v2.AuthorizationService.GetDecisionByToken:input_type -> authorization.v2.GetDecisionByTokenRequest
	19, // 30: authorization.v2.AuthorizationService.GetDecisionBulkByToken:input_type -> authorization.v2.GetDecisionBulkByTokenRequest
	14, // 31: authorization.v2.AuthorizationService.GetEntitlements:input_type -> authorization.v2.GetEntitlementsRequest
	11, // 32: authorization.v2.AuthorizationService.GetDecision:output_type -> authorization.v2.GetDecisionResponse
	13, // 33: authorization.v2.AuthorizationService.GetDecisionBulk:output_type -> authorization.v2.GetDecisionBulkResponse
	18, // 34: authorization.v2.AuthorizationService.GetDecisionByToken:output_type -> authorization.v2.GetDecisionByTokenResponse
	20, // 35: authorization.v2.AuthorizationService.GetDecisionBulkByToken:output_type -> authorization.v2.GetDecisionBulkByTokenResponse
	15, // 36: authorization.v2.AuthorizationService.GetEntitlements:output_type -> authorization.v2.GetEntitlementsResponse
	32, // [32:37] is the sub-list for method output_type
	27, // [27:32] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_authorization_v2_authorization_proto_init() }
func file_authorization_v2_authorization_proto_init() {
	if File_authorization_v2_authorization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authorization_v2_authorization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityCustom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityEntitlements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionBulkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionBulkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntitlementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntitlementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenDecisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionByTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionBulkByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDecisionBulkByTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityEntitlements_ActionsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_v2_authorization_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_AttributeValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_authorization_v2_authorization_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Entity_EmailAddress)(nil),
		(*Entity_UserName)(nil),
		(*Entity_Custom)(nil),
		(*Entity_ClientId)(nil),
		(*Entity_RegisteredResourceValueFqn)(nil),
	}
	file_authorization_v2_authorization_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Resource_AttributeValues_)(nil),
		(*Resource_RegisteredResourceValueFqn)(nil),
	}
	file_authorization_v2_authorization_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authorization_v2_authorization_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authorization_v2_authorization_proto_goTypes,
		DependencyIndexes: file_authorization_v2_authorization_proto_depIdxs,
		EnumInfos:         file_authorization_v2_authorization_proto_enumTypes,
		MessageInfos:      file_authorization_v2_authorization_proto_msgTypes,
	}.Build()
	File_authorization_v2_authorization_proto = out.File
	file_authorization_v2_authorization_proto_rawDesc = nil
	file_authorization_v2_authorization_proto_goTypes = nil
	file_authorization_v2_authorization_proto_depIdxs = nil
}
