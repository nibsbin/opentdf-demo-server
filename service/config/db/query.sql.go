// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package db

import (
	"context"
)

const createConfig = `-- name: CreateConfig :exec
INSERT INTO config (service, version, aliases, value)
VALUES ($1, $2, $3, $4)
`

type CreateConfigParams struct {
	Service string   `json:"service"`
	Version string   `json:"version"`
	Aliases []string `json:"aliases"`
	Value   []byte   `json:"value"`
}

// CreateConfig
//
//	INSERT INTO config (service, version, aliases, value)
//	VALUES ($1, $2, $3, $4)
func (q *Queries) CreateConfig(ctx context.Context, arg CreateConfigParams) error {
	_, err := q.db.Exec(ctx, createConfig,
		arg.Service,
		arg.Version,
		arg.Aliases,
		arg.Value,
	)
	return err
}

const getConfig = `-- name: GetConfig :one
SELECT
  service,
  version,
  aliases,
  value
FROM config
WHERE service = $1
`

type GetConfigRow struct {
	Service string   `json:"service"`
	Version string   `json:"version"`
	Aliases []string `json:"aliases"`
	Value   []byte   `json:"value"`
}

// todo: versioning will be added in future, and likely need an "active" or "current" indicator
//
//	SELECT
//	  service,
//	  version,
//	  aliases,
//	  value
//	FROM config
//	WHERE service = $1
func (q *Queries) GetConfig(ctx context.Context, service string) (GetConfigRow, error) {
	row := q.db.QueryRow(ctx, getConfig, service)
	var i GetConfigRow
	err := row.Scan(
		&i.Service,
		&i.Version,
		&i.Aliases,
		&i.Value,
	)
	return i, err
}
