syntax = "proto3";

package entityresolution.v2;

import "authorization/authorization.proto";
import "authorization/v2/authorization.proto";
import "buf/validate/validate.proto";
import "entityresolution/entity_resolution.proto";

// Resolve a set of entities to their representations.
message ResolveEntitiesRequest {
  repeated authorization.v2.Entity entities_v2 = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).repeated = {min_items: 1}
  ];
}
message ResolveEntitiesResponse {
  repeated entityresolution.EntityRepresentation entity_representations = 1;
}

// Create an entity chain from a single JWT.
message CreateEntityChainFromJwtRequest {
  authorization.Token token = 1;
}
message CreateEntityChainFromJwtResponse {
  authorization.v2.EntityChain entity_chains = 1;
}

// Create an entity chain from multiple JWTs.
message CreateEntityChainFromJwtMultiRequest {
  repeated authorization.Token token = 1;
}
message CreateEntityChainFromJwtMultiResponse {
  repeated authorization.v2.EntityChain entity_chains = 1;
}

service EntityResolutionService {
  rpc ResolveEntities(ResolveEntitiesRequest) returns (ResolveEntitiesResponse) {}
  rpc CreateEntityChainFromJwt(CreateEntityChainFromJwtRequest) returns (CreateEntityChainFromJwtResponse) {}
  rpc CreateEntityChainFromJwtMulti(CreateEntityChainFromJwtMultiRequest) returns (CreateEntityChainFromJwtMultiResponse) {}
}
